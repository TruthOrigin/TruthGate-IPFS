// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruthGate_Web.Security;

#nullable disable

namespace TruthGate_Web.Migrations.RateLimiter
{
    [DbContext(typeof(RateLimiterDbContext))]
    [Migration("20250828174008_ConvertDtoToUnixMs")]
    partial class ConvertDtoToUnixMs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("TruthGate_Web.Security.AdminAuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("DetailsJson")
                        .HasColumnType("TEXT");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<long>("TsUtc")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AdminAuditLogs");
                });

            modelBuilder.Entity("TruthGate_Web.Security.Ban", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedUtc")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ExpiresUtc")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpV6Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsTrueBan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReasonCode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<int>("Scope")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresUtc");

                    b.HasIndex("Ip", "IpV6Prefix", "Scope", "Type");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("TruthGate_Web.Security.GlobalMinuteCounter", b =>
                {
                    b.Property<string>("MinuteBucket")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCalls")
                        .HasColumnType("INTEGER");

                    b.HasKey("MinuteBucket");

                    b.ToTable("GlobalMinuteCounters");
                });

            modelBuilder.Entity("TruthGate_Web.Security.GracePair", b =>
                {
                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("KeyHash")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("ExpiresUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Ip", "KeyHash");

                    b.HasIndex("ExpiresUtc");

                    b.ToTable("GracePairs");
                });

            modelBuilder.Entity("TruthGate_Web.Security.IpMinuteCounter", b =>
                {
                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("MinuteBucket")
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<int>("AdminBadKeyCalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdminGoodKeyCalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GatewayCalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GatewayOverageUsed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublicCalls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Scope")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ip", "MinuteBucket");

                    b.HasIndex("MinuteBucket");

                    b.HasIndex("Ip", "Scope");

                    b.ToTable("IpMinuteCounters");
                });

            modelBuilder.Entity("TruthGate_Web.Security.TlsChurnMetric", b =>
                {
                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<long>("WindowStartUtc")
                        .HasColumnType("INTEGER");

                    b.Property<double>("AvgReqPerConn")
                        .HasColumnType("REAL");

                    b.Property<int>("NewConnections")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Requests")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ip", "WindowStartUtc");

                    b.ToTable("TlsChurnMetrics");
                });

            modelBuilder.Entity("TruthGate_Web.Security.Whitelist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Auto")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatedUtc")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ExpiresUtc")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ipv6Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresUtc");

                    b.ToTable("Whitelists");
                });
#pragma warning restore 612, 618
        }
    }
}
